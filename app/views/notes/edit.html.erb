<div class="flex-1 bg-gray-50">
  <div class="max-w-2xl mx-auto px-6 py-8">
    <!-- Header -->
    <div class="mb-8">
      <%= link_to "← Back to Notes", notes_path, class: "text-blue-600 hover:text-blue-700 font-medium" %>
    </div>

    <!-- Edit Form -->
    <div class="bg-white rounded-xl shadow-lg p-8">
      <h2 class="text-3xl font-bold text-gray-900 mb-8">Edit Note</h2>

      <%= form_with(model: @note, local: true, id: "edit-note-form") do |form| %>
        <% if @note.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <h4 class="text-red-800 font-medium mb-2">Please fix the following errors:</h4>
            <ul class="text-red-700 text-sm space-y-1">
              <% @note.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <div class="mb-6">
          <%= form.label :title, class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_field :title, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
              placeholder: "Note title (optional)",
              id: "edit-note-title" %>
        </div>

        <div class="mb-8">
          <%= form.label :content, class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_area :content, 
              rows: 2,
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none",
              placeholder: "Start typing your note here...",
              id: "edit-note-content" %>
        </div>

        <div class="flex space-x-3">
          <%= form.submit "Update Note", 
              class: "bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors",
              id: "update-button" %>
          <%= link_to "Cancel", @note, 
              class: "bg-gray-500 hover:bg-gray-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors" %>
        </div>
      <% end %>
    </div>

    <!-- Quick Tips -->
    <div class="mt-6 bg-blue-50 rounded-lg p-4">
      <h3 class="text-sm font-medium text-blue-900 mb-2">💡 Quick Tips</h3>
      <ul class="text-sm text-blue-800 space-y-1" id="edit-tips-list">
        <!-- Tips will be populated by JavaScript based on device type -->
      </ul>
    </div>
  </div>
</div>

<script>
(function() {
  function isMobileDevice() {
    return /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || 
           (window.innerWidth <= 768);
  }

  function setupEditFormBehavior() {
    const form = document.getElementById('edit-note-form');
    const contentTextarea = document.getElementById('edit-note-content');
    const titleInput = document.getElementById('edit-note-title');
    const tipsList = document.getElementById('edit-tips-list');
    const updateButton = document.getElementById('update-button');
    
    if (!form || !contentTextarea || !titleInput || !tipsList) {
      console.log('Edit form elements not found, retrying...');
      setTimeout(setupEditFormBehavior, 100);
      return;
    }
    
    const isMobile = isMobileDevice();
    console.log('Setting up edit form behavior - Mobile:', isMobile);
    
    // Update tips based on device type
    if (isMobile) {
      tipsList.innerHTML = `
        <li>• <strong>Tap Update button</strong> to save changes</li>
        <li>• <strong>Enter</strong> creates new lines naturally</li>
        <li>• <strong>Tab</strong> to jump between fields</li>
        <li>• Title is optional - great for organizing longer notes</li>
        <li>• Perfect for URLs, code snippets, meeting notes, or random thoughts</li>
      `;
    } else {
      tipsList.innerHTML = `
        <li>• <strong>Press Enter</strong> to update instantly</li>
        <li>• <strong>Shift+Enter</strong> for new lines</li>
        <li>• <strong>Tab</strong> to jump between fields</li>
        <li>• Title is optional - great for organizing longer notes</li>
        <li>• Perfect for URLs, code snippets, meeting notes, or random thoughts</li>
      `;
    }
    
    // Handle keyboard behavior based on device type
    function handleKeydown(e, isTitle = false) {
      if (e.key === 'Enter') {
        if (isMobile) {
          // Mobile: Enter always creates new line, except in title
          if (isTitle) {
            // In title on mobile, Enter moves to content
            e.preventDefault();
            contentTextarea.focus();
          }
          // In content on mobile, Enter creates new line (default behavior)
          return;
        } else {
          // Desktop: Current behavior
          if (e.shiftKey) {
            // Shift+Enter = new line (allow default behavior)
            return;
          } else {
            // Enter = save
            e.preventDefault();
            console.log('Submitting edit form (desktop)');
            form.submit();
          }
        }
      }
      
      // Ctrl/Cmd+Enter always saves on any device
      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
        e.preventDefault();
        console.log('Submitting edit form (keyboard shortcut)');
        form.submit();
      }
    }
    
    // Apply keyboard handlers
    contentTextarea.addEventListener('keydown', (e) => handleKeydown(e, false));
    titleInput.addEventListener('keydown', (e) => handleKeydown(e, true));
    
    // Auto-resize textarea
    contentTextarea.addEventListener('input', function() {
      this.style.height = 'auto';
      this.style.height = this.scrollHeight + 'px';
    });
    
    // Set initial height and focus
    setTimeout(function() {
      contentTextarea.style.height = 'auto';
      contentTextarea.style.height = contentTextarea.scrollHeight + 'px';
    }, 50);
    contentTextarea.focus();
    
    // Add keyboard shortcut hint to update button on desktop
    if (!isMobile) {
      updateButton.setAttribute('title', 'Or press Enter to update');
    }
  }
  
  // Start setup immediately and also on DOM ready
  setupEditFormBehavior();
  document.addEventListener('DOMContentLoaded', setupEditFormBehavior);
  
  // Re-check on window resize (device orientation change)
  window.addEventListener('resize', () => {
    setTimeout(setupEditFormBehavior, 100);
  });
})();
</script>