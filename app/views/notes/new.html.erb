<div class="flex-1 bg-gray-50">
  <div class="max-w-2xl mx-auto px-6 py-8">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Create Note</h1>
      <p class="text-gray-600 mt-1">Drop your thoughts, links, or snippets here</p>
    </div>

    <!-- Form -->
    <div class="bg-white rounded-lg shadow-lg p-4">
      <%= form_with model: @note, local: true, class: "space-y-6", id: "note-form" do |f| %>
        <%= render "shared/error_messages", resource: @note if @note.errors.any? %>

        <!-- Title Field (Optional) -->
        <div>
          <%= f.label :title, class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_field :title, 
              placeholder: "Give your note a title (optional)", 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
              id: "note-title" %>
        </div>

        <!-- Content Field -->
        <div>
          <%= f.label :content, class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_area :content, 
              placeholder: "Paste your text, links, code, or ideas here...", 
              rows: 1,
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none",
              id: "note-content" %>
        </div>

        <!-- Actions -->
        <div class="flex justify-between items-center pt-2">
          <%= link_to "Cancel", notes_path, 
              class: "text-gray-600 hover:text-gray-800 font-medium" %>
          
          <div class="space-x-3">
            <%= f.submit "Save Note", 
                class: "bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors shadow-lg hover:shadow-xl",
                id: "save-button" %>
          </div>
        </div>
      <% end %>
    </div>

    <!-- Quick Tips -->
    <div class="mt-6 bg-blue-50 rounded-lg p-4">
      <h3 class="text-sm font-medium text-blue-900 mb-2">ðŸ’¡ Quick Tips</h3>
      <ul class="text-sm text-blue-800 space-y-1" id="tips-list">
        <!-- Tips will be populated by JavaScript based on device type -->
      </ul>
    </div>
  </div>
</div>

<script>
(function() {
  function isMobileDevice() {
    return /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || 
           (window.innerWidth <= 768);
  }

  function setupFormBehavior() {
    const form = document.getElementById('note-form');
    const contentTextarea = document.getElementById('note-content');
    const titleInput = document.getElementById('note-title');
    const tipsList = document.getElementById('tips-list');
    const saveButton = document.getElementById('save-button');
    
    if (!form || !contentTextarea || !titleInput || !tipsList) {
      console.log('Form elements not found, retrying...');
      setTimeout(setupFormBehavior, 100);
      return;
    }
    
    const isMobile = isMobileDevice();
    console.log('Setting up form behavior - Mobile:', isMobile);
    
    // Update tips based on device type
    if (isMobile) {
      tipsList.innerHTML = `
        <li>â€¢ <strong>Tap Save button</strong> to save your note</li>
        <li>â€¢ <strong>Enter</strong> creates new lines naturally</li>
        <li>â€¢ <strong>Tab</strong> to jump between fields</li>
        <li>â€¢ Title is optional - great for organizing longer notes</li>
        <li>â€¢ Perfect for URLs, code snippets, meeting notes, or random thoughts</li>
      `;
    } else {
      tipsList.innerHTML = `
        <li>â€¢ <strong>Press Enter</strong> to save instantly</li>
        <li>â€¢ <strong>Shift+Enter</strong> for new lines</li>
        <li>â€¢ <strong>Tab</strong> to jump between fields</li>
        <li>â€¢ Title is optional - great for organizing longer notes</li>
        <li>â€¢ Perfect for URLs, code snippets, meeting notes, or random thoughts</li>
      `;
    }
    
    // Handle keyboard behavior based on device type
    function handleKeydown(e, isTitle = false) {
      if (e.key === 'Enter') {
        if (isMobile) {
          // Mobile: Enter always creates new line, except in title
          if (isTitle) {
            // In title on mobile, Enter moves to content
            e.preventDefault();
            contentTextarea.focus();
          }
          // In content on mobile, Enter creates new line (default behavior)
          return;
        } else {
          // Desktop: Current behavior
          if (e.shiftKey) {
            // Shift+Enter = new line (allow default behavior)
            return;
          } else {
            // Enter = save
            e.preventDefault();
            console.log('Submitting form (desktop)');
            form.submit();
          }
        }
      }
      
      // Ctrl/Cmd+Enter always saves on any device
      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
        e.preventDefault();
        console.log('Submitting form (keyboard shortcut)');
        form.submit();
      }
    }
    
    // Apply keyboard handlers
    contentTextarea.addEventListener('keydown', (e) => handleKeydown(e, false));
    titleInput.addEventListener('keydown', (e) => handleKeydown(e, true));
    
    // Auto-resize textarea
    contentTextarea.addEventListener('input', function() {
      this.style.height = 'auto';
      this.style.height = this.scrollHeight + 'px';
    });
    
    // Focus on content
    contentTextarea.focus();
    
    // Add keyboard shortcut hint to save button on desktop
    if (!isMobile) {
      saveButton.setAttribute('title', 'Or press Enter to save');
    }
  }
  
  // Start setup immediately and also on DOM ready
  setupFormBehavior();
  document.addEventListener('DOMContentLoaded', setupFormBehavior);
  
  // Re-check on window resize (device orientation change)
  window.addEventListener('resize', () => {
    setTimeout(setupFormBehavior, 100);
  });
})();
</script>