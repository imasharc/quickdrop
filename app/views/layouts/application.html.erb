<!-- app/views/layouts/application.html.erb -->
<!DOCTYPE html>
<html>
  <head>
    <title>QuickDrop</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

    <!-- PWA Configuration -->
    <%= tag.link rel: "manifest", href: pwa_manifest_path %>
    <%= tag.meta name: "theme-color", content: "#2563eb" %>
    <%= tag.meta name: "apple-mobile-web-app-capable", content: "yes" %>
    <%= tag.meta name: "apple-mobile-web-app-title", content: "QuickDrop" %>
    <%= tag.link rel: "apple-touch-icon", href: "/logoipsum-custom-logo-192.png" %>
  </head>

  <body class="bg-white text-gray-900 font-sans min-h-screen flex flex-col">
    <!-- Navigation -->
    <nav class="h-16 border-b border-gray-200 bg-white flex items-center">
      <div class="max-w-4xl mx-auto px-6 w-full">
        <div class="flex justify-between items-center">
          <%= link_to "QuickDrop", user_signed_in? ? notes_path : root_path, 
            class: "text-2xl font-bold text-blue-600 hover:text-blue-700" %>
          
          <div class="flex items-center space-x-6">
            <% if user_signed_in? %>
              <%= link_to "Notes", notes_path, class: "text-gray-600 hover:text-blue-600 font-medium" %>
              <span class="text-gray-600">Hello, <%= current_user.email.split('@')[0] %></span>
              <%= button_to "Sign out", destroy_user_session_path, method: :delete, 
                  class: "text-gray-600 hover:text-gray-800 bg-transparent border-none cursor-pointer" %>
            <% else %>
              <%= link_to "Sign in", new_user_session_path, 
                  class: "text-gray-600 hover:text-blue-600 font-medium" %>
              <%= link_to "Sign up", new_user_registration_path, 
                  class: "bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors" %>
            <% end %>
          </div>
        </div>
      </div>
    </nav>

    <!-- Flash messages -->
    <% if notice %>
      <div class="bg-green-50 border-l-4 border-green-400 p-4">
        <p class="text-green-700"><%= notice %></p>
      </div>
    <% end %>
    <% if alert %>
      <div class="bg-red-50 border-l-4 border-red-400 p-4">
        <p class="text-red-700"><%= alert %></p>
      </div>
    <% end %>

    <!-- Main content -->
    <main class="flex-1 flex flex-col">
      <%= yield %>
    </main>

    <!-- PWA Install Prompt -->
    <div id="pwa-install-prompt" class="hidden fixed bottom-4 left-4 right-4 bg-blue-600 text-white p-4 rounded-lg shadow-lg z-50">
      <div class="flex items-center justify-between">
        <div>
          <p class="font-medium">Install QuickDrop</p>
          <p class="text-sm text-blue-100">Get instant access to your notes</p>
        </div>
        <div class="flex space-x-2">
          <button id="pwa-install-btn" class="bg-white text-blue-600 px-4 py-2 rounded font-medium">
            Install
          </button>
          <button id="pwa-dismiss-btn" class="text-blue-100 px-2">
            âœ•
          </button>
        </div>
      </div>
    </div>

    <!-- PWA Script - Only load once -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Prevent multiple script execution
      if (window.pwaScriptLoaded) return;
      window.pwaScriptLoaded = true;
      
      let deferredPrompt;
      const installPrompt = document.getElementById('pwa-install-prompt');
      const installBtn = document.getElementById('pwa-install-btn');
      const dismissBtn = document.getElementById('pwa-dismiss-btn');

      // Listen for install prompt
      window.addEventListener('beforeinstallprompt', (e) => {
        e.preventDefault();
        deferredPrompt = e;
        
        // Show custom install prompt
        if (installPrompt) {
          installPrompt.classList.remove('hidden');
        }
      });

      // Handle install
      if (installBtn) {
        installBtn.addEventListener('click', async () => {
          if (deferredPrompt) {
            deferredPrompt.prompt();
            const { outcome } = await deferredPrompt.userChoice;
            deferredPrompt = null;
            if (installPrompt) {
              installPrompt.classList.add('hidden');
            }
          }
        });
      }

      // Handle dismiss
      if (dismissBtn) {
        dismissBtn.addEventListener('click', () => {
          if (installPrompt) {
            installPrompt.classList.add('hidden');
          }
          deferredPrompt = null;
        });
      }

      // Register service worker
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/service-worker')
          .then(registration => console.log('SW registered'))
          .catch(error => console.log('SW failed'));
      }
    });
    </script>
  </body>
</html>